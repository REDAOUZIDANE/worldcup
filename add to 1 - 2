# 1. Update security middleware (add to app.py)
cat > app.py << 'EOL'
from flask import Flask, render_template, request, jsonify, redirect, url_for
from flask_login import LoginManager, UserMixin, login_user, logout_user, login_required, current_user
from werkzeug.security import generate_password_hash, check_password_hash
from models import db, User, Hotel, Activity, Booking
from services.recommendation_engine import RecommendationEngine
from services.image_processor import process_and_store_image
import os
from dotenv import load_dotenv
from flask_talisman import Talisman
from flask_limiter import Limiter
from flask_limiter.util import get_remote_address
import bleach

load_dotenv()

app = Flask(__name__)
app.config['SECRET_KEY'] = os.getenv('SECRET_KEY')
app.config['SQLALCHEMY_DATABASE_URI'] = os.getenv('DATABASE_URL', 'sqlite:///vamosway.db')
app.config['UPLOAD_FOLDER'] = 'static/images/uploads'
app.config['AI_MODEL'] = os.getenv('AI_MODEL', 'gpt-4')
app.config['SESSION_COOKIE_SECURE'] = True
app.config['SESSION_COOKIE_HTTPONLY'] = True
app.config['SESSION_COOKIE_SAMESITE'] = 'Lax'
app.config['PERMANENT_SESSION_LIFETIME'] = 3600  # 1 hour session lifetime

# Security middleware
Talisman(
    app,
    force_https=True,
    strict_transport_security=True,
    session_cookie_secure=True,
    content_security_policy={
        'default-src': "'self'",
        'script-src': ["'self'", "'unsafe-inline'", "cdn.jsdelivr.net"],
        'style-src': ["'self'", "'unsafe-inline'", "cdn.jsdelivr.net", "fonts.googleapis.com"],
        'img-src': ["'self'", "data:", "blob:"],
        'font-src': ["'self'", "fonts.gstatic.com"],
    }
)

# Rate limiting
limiter = Limiter(
    app=app,
    key_func=get_remote_address,
    default_limits=["200 per day", "50 per hour"]
)

db.init_app(app)
login_manager = LoginManager(app)
login_manager.login_view = 'login'

# Initialize AI recommendation engine
recommendation_engine = RecommendationEngine()

@login_manager.user_loader
def load_user(user_id):
    return User.query.get(int(user_id))

@app.before_request
def before_request():
    # Sanitize all incoming request data
    if request.method in ('POST', 'PUT'):
        for key, value in request.form.items():
            request.form[key] = bleach.clean(value)
        if request.json:
            for key, value in request.json.items():
                request.json[key] = bleach.clean(value)

# ... [rest of your existing routes with added security decorators] ...

@app.route('/ai-recommendations', methods=['GET', 'POST'])
@login_required
@limiter.limit("10 per minute")
def ai_recommendations():
    # ... existing implementation ...

if __name__ == '__main__':
    with app.app_context():
        db.create_all()
    if os.getenv('FLASK_ENV') == 'production':
        from waitress import serve
        serve(app, host="0.0.0.0", port=5000)
    else:
        app.run(debug=True)
EOL

# 2. Enhanced CSS with Moroccan theme
cat > static/css/moroccan.css << 'EOL'
:root {
    --morocco-red: #C1272D;
    --morocco-green: #006233;
    --morocco-gold: #D4AF37;
    --morocco-blue: #72A0C1;
    --morocco-light: #F8F1E5;
    --morocco-dark: #1A1A1A;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: var(--morocco-light);
    color: var(--morocco-dark);
}

.navbar {
    background: linear-gradient(135deg, var(--morocco-red), var(--morocco-green));
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    animation: fadeIn 0.8s ease-out;
}

.hero {
    background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), 
                url('../images/morocco-hero.jpg') center/cover;
    height: 100vh;
    min-height: 600px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    text-align: center;
    position: relative;
    overflow: hidden;
}

.hero::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('../images/moroccan-pattern.png');
    opacity: 0.1;
    z-index: 0;
}

.hero-content {
    position: relative;
    z-index: 1;
    animation: fadeIn 1s ease-out 0.3s both;
}

.btn-morocco {
    background: linear-gradient(to right, var(--morocco-red), var(--morocco-green));
    color: white;
    border: none;
    padding: 12px 30px;
    font-size: 1.1rem;
    border-radius: 50px;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(193, 39, 45, 0.3);
}

.btn-morocco:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 20px rgba(193, 39, 45, 0.4);
    color: white;
}

.card {
    transition: all 0.3s ease;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    animation: fadeIn 0.6s ease-out;
}

.card:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
}

.morocco-icon {
    font-size: 2.5rem;
    background: linear-gradient(to right, var(--morocco-red), var(--morocco-green));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    margin-bottom: 1rem;
}

/* Responsive design */
@media (max-width: 768px) {
    .hero {
        height: auto;
        padding: 100px 0;
    }
    
    .hero h1 {
        font-size: 2.2rem;
    }
}

/* Animation classes */
.animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s ease-out;
}

.animate-on-scroll.visible {
    opacity: 1;
    transform: translateY(0);
}

.pulse-animation {
    animation: pulse 2s infinite;
}
EOL

# 3. Enhanced JavaScript with animations and security
cat > static/js/main.js << 'EOL'
document.addEventListener('DOMContentLoaded', function() {
    // Initialize animations
    initAnimations();
    
    // Initialize interactive elements
    initImageUpload();
    initFormValidation();
    initTooltips();
    initMap();
    
    // Security-related handlers
    initSecurityFeatures();
});

function initAnimations() {
    // Intersection Observer for scroll animations
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible');
            }
        });
    }, { threshold: 0.1 });

    document.querySelectorAll('.animate-on-scroll').forEach(el => {
        observer.observe(el);
    });

    // Add pulse animation to featured items
    document.querySelectorAll('.featured-item').forEach((el, index) => {
        el.style.animationDelay = `${index * 0.1}s`;
    });
}

function initImageUpload() {
    const imageUpload = document.getElementById('image-upload');
    if (imageUpload) {
        imageUpload.addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                // Validate file type
                const validTypes = ['image/jpeg', 'image/png', 'image/gif'];
                if (!validTypes.includes(file.type)) {
                    showAlert('Please upload a valid image file (JPEG, PNG, GIF)', 'error');
                    return;
                }

                // Validate file size (max 5MB)
                if (file.size > 5 * 1024 * 1024) {
                    showAlert('Image size should be less than 5MB', 'error');
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(event) {
                    document.getElementById('image-preview').src = event.target.result;
                }
                reader.readAsDataURL(file);
            }
        });
    }
}

function initFormValidation() {
    const forms = document.querySelectorAll('form');
    forms.forEach(form => {
        form.addEventListener('submit', function(e) {
            let valid = true;
            const inputs = form.querySelectorAll('input[required], select[required], textarea[required]');
            
            inputs.forEach(input => {
                if (!input.value.trim()) {
                    input.classList.add('border-red-500');
                    valid = false;
                } else {
                    input.classList.remove('border-red-500');
                    
                    // Special validation for email fields
                    if (input.type === 'email' && !validateEmail(input.value)) {
                        input.classList.add('border-red-500');
                        showAlert('Please enter a valid email address', 'error', input);
                        valid = false;
                    }
                    
                    // Password strength validation
                    if (input.type === 'password' && !validatePassword(input.value)) {
                        input.classList.add('border-red-500');
                        showAlert('Password must be at least 8 characters with uppercase, lowercase, and numbers', 'error', input);
                        valid = false;
                    }
                }
            });
            
            if (!valid) {
                e.preventDefault();
                showAlert('Please fill in all required fields correctly', 'error');
            }
        });
    });
}

function initTooltips() {
    const tooltipElements = document.querySelectorAll('[data-tooltip]');
    tooltipElements.forEach(el => {
        el.addEventListener('mouseenter', showTooltip);
        el.addEventListener('mouseleave', hideTooltip);
    });
}

function initMap() {
    if (document.getElementById('map')) {
        // Initialize interactive map (would use Mapbox or Leaflet in production)
        console.log('Map initialization would happen here');
        
        // For demo purposes, we'll just show a placeholder
        const mapContainer = document.getElementById('map');
        mapContainer.innerHTML = `
            <div class="bg-gray-200 h-full flex items-center justify-center">
                <div class="text-center p-4">
                    <i class="fas fa-map-marked-alt text-4xl text-green-700 mb-2"></i>
                    <p>Interactive map would display here</p>
                </div>
            </div>
        `;
    }
}

function initSecurityFeatures() {
    // Add security headers to all fetch requests
    if (window.fetch) {
        const originalFetch = window.fetch;
        window.fetch = function(resource, init) {
            if (!init) init = {};
            if (!init.headers) init.headers = {};
            
            init.headers['X-Requested-With'] = 'XMLHttpRequest';
            init.headers['X-CSRF-Token'] = document.querySelector('meta[name="csrf-token"]')?.content || '';
            
            return originalFetch(resource, init);
        };
    }
    
    // Add beforeunload handler for sensitive pages
    if (document.querySelector('[data-sensitive]')) {
        window.addEventListener('beforeunload', (e) => {
            e.preventDefault();
            e.returnValue = 'Are you sure you want to leave? You may have unsaved changes.';
        });
    }
}

// Helper functions
function validateEmail(email) {
    const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return re.test(email);
}

function validatePassword(password) {
    // At least 8 chars, 1 uppercase, 1 lowercase, 1 number
    const re = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;
    return re.test(password);
}

function showAlert(message, type = 'success', element = null) {
    const alert = document.createElement('div');
    alert.className = `alert alert-${type} fixed top-4 right-4 z-50 px-6 py-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full`;
    alert.textContent = message;
    
    document.body.appendChild(alert);
    
    setTimeout(() => {
        alert.classList.remove('translate-x-full');
        alert.classList.add('translate-x-0');
    }, 10);
    
    setTimeout(() => {
        alert.classList.remove('translate-x-0');
        alert.classList.add('translate-x-full');
        setTimeout(() => alert.remove(), 300);
    }, 5000);
    
    if (element) {
        element.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
}
EOL

# 4. Add production configuration files
cat > Dockerfile << 'EOL'
FROM python:3.9-slim

WORKDIR /app

RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

ENV FLASK_APP=app.py
ENV FLASK_ENV=production

EXPOSE 5000

CMD ["gunicorn", "--bind", "0.0.0.0:5000", "app:app"]
EOL

cat > requirements.txt << 'EOL'
flask
flask-login
flask-sqlalchemy
openai
pillow
python-dotenv
requests
flask-talisman
flask-limiter
bleach
gunicorn
psycopg2-binary
EOL

cat > docker-compose.yml << 'EOL'
version: '3.8'

services:
  web:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db/postgres
      - SECRET_KEY=your-secret-key-here
      - OPENAI_API_KEY=your-openai-api-key-here
    depends_on:
      - db

  db:
    image: postgres:13
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
EOL

# 5. Update base template with security meta tags
cat > templates/base.html << 'EOL'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="VamosWay - AI-powered Moroccan travel experiences">
    <meta name="keywords" content="Morocco,travel,AI,recommendations,tourism">
    
    <!-- Security Headers -->
    <meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' 'unsafe-inline' cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' cdn.jsdelivr.net fonts.googleapis.com; img-src 'self' data: blob:; font-src 'self' fonts.gstatic.com; connect-src 'self'">
    <meta name="referrer" content="strict-origin-when-cross-origin">
    
    <!-- CSRF Protection -->
    <meta name="csrf-token" content="{{ csrf_token() }}">
    
    <title>VamosWay - {% block title %}{% endblock %}</title>
    
    <!-- Preload important resources -->
    <link rel="preload" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" as="style">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" as="style">
    
    <!-- Styles -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/moroccan.css') }}">
    
    <!-- Favicon -->
    <link rel="icon" href="{{ url_for('static', filename='images/favicon.ico') }}" type="image/x-icon">
    
    {% block extra_head %}{% endblock %}
</head>
<body class="bg-gray-100">
    <!-- Navbar -->
    <nav class="navbar text-white p-4 shadow-lg animate-on-scroll">
        <div class="container mx-auto flex justify-between items-center">
            <a href="{{ url_for('home') }}" class="text-3xl font-bold flex items-center">
                <i class="fas fa-route mr-2"></i> VamosWay
            </a>
            <div class="flex space-x-6">
                {% if current_user.is_authenticated %}
                    <a href="{{ url_for('dashboard') }}" class="hover:text-yellow-300 transition duration-300 flex items-center">
                        <i class="fas fa-user-circle mr-2"></i> Dashboard
                    </a>
                    <a href="{{ url_for('logout') }}" class="hover:text-yellow-300 transition duration-300 flex items-center">
                        <i class="fas fa-sign-out-alt mr-2"></i> Logout
                    </a>
                {% else %}
                    <a href="{{ url_for('login') }}" class="hover:text-yellow-300 transition duration-300 flex items-center">
                        <i class="fas fa-sign-in-alt mr-2"></i> Login
                    </a>
                    <a href="{{ url_for('register') }}" class="hover:text-yellow-300 transition duration-300 flex items-center">
                        <i class="fas fa-user-plus mr-2"></i> Register
                    </a>
                {% endif %}
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container mx-auto p-4">
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                {% for category, message in messages %}
                    <div class="alert alert-{{ category }} p-4 mb-6 rounded-lg shadow-md">
                        {{ message }}
                    </div>
                {% endfor %}
            {% endif %}
        {% endwith %}

        {% block content %}{% endblock %}
    </main>

    <!-- Footer -->
    <footer class="bg-gradient-to-r from-red-800 to-green-800 text-white p-8 mt-12">
        <div class="container mx-auto grid grid-cols-1 md:grid-cols-4 gap-8">
            <div>
                <h3 class="text-xl font-bold mb-4">VamosWay</h3>
                <p>Your AI-powered Moroccan travel companion, creating personalized experiences since 2023.</p>
            </div>
            <div>
                <h4 class="font-bold mb-4">Quick Links</h4>
                <ul class="space-y-2">
                    <li><a href="{{ url_for('home') }}" class="hover:text-yellow-300 transition duration-300">Home</a></li>
                    <li><a href="{{ url_for('hotels') }}" class="hover:text-yellow-300 transition duration-300">Hotels</a></li>
                    <li><a href="{{ url_for('ai_recommendations') }}" class="hover:text-yellow-300 transition duration-300">AI Planner</a></li>
                </ul>
            </div>
            <div>
                <h4 class="font-bold mb-4">Legal</h4>
                <ul class="space-y-2">
                    <li><a href="#" class="hover:text-yellow-300 transition duration-300">Privacy Policy</a></li>
                    <li><a href="#" class="hover:text-yellow-300 transition duration-300">Terms of Service</a></li>
                </ul>
            </div>
            <div>
                <h4 class="font-bold mb-4">Connect</h4>
                <div class="flex space-x-4">
                    <a href="#" class="text-2xl hover:text-yellow-300 transition duration-300"><i class="fab fa-facebook"></i></a>
                    <a href="#" class="text-2xl hover:text-yellow-300 transition duration-300"><i class="fab fa-instagram"></i></a>
                    <a href="#" class="text-2xl hover:text-yellow-300 transition duration-300"><i class="fab fa-twitter"></i></a>
                </div>
            </div>
        </div>
        <div class="container mx-auto text-center mt-8 pt-4 border-t border-white border-opacity-20">
            <p>&copy; 2023 VamosWay. All rights reserved.</p>
        </div>
    </footer>

    <!-- Scripts -->
    <script src="{{ url_for('static', filename='js/main.js') }}"></script>
    
    {% block extra_scripts %}{% endblock %}
</body>
</html>
EOL
